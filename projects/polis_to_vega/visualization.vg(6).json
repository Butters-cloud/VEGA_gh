{
  "$schema": "https://vega.github.io/schema/vega/v5.json",
  "description": "An interactive scatter plot example supporting pan and zoom.",
  "width": 500,
  "height": 400,
  "padding": {"top": 20, "left": 40, "bottom": 20, "right": 10},
  "autosize": "none",
  "config": {
    "axis": {
      "domain": false,
      "tickSize": 3,
      "tickColor": "#888",
      "labelFont": "Monaco, Courier New"
    }
  },
  "signals": [
    {"name": "margin", "value": 20},
    {
      "name": "bandwidth",
      "value": -1,
      "bind": {"input": "range", "min": -1, "max": 100, "step": 1}
    },
    {"name": "counts", "value": true, "bind": {"input": "checkbox"}},
    {"name": "contour", "value": false, "bind": {"input": "checkbox"}},
    {
      "name": "resolve",
      "value": "shared",
      "bind": {"input": "select", "options": ["independent", "shared"]}
    },
    {
      "name": "hover",
      "on": [
        {"events": "*:mouseover", "update": "datum"},
        {"events": "*:mouseout", "encode": "leave"},
        {"events": "*:mousedown", "encode": "select"},
        {"events": "*:mouseup", "encode": "release"}
      ]
    },
    {"name": "User", "value": "Lea", "bind": {"input": "text"}},
    {
      "name": "title",
      "value": "Magenta 1",
      "update": "hover ? hover.user + ' (cluster ' + hover.cluster + ')' + ',' : 'Magenta 2'"
    },
    {"name": "xoffset", "update": "-(height + padding.bottom)"},
    {"name": "yoffset", "update": "-(width + padding.left )"},
    {"name": "xrange", "update": "[0, width]"},
    {"name": "yrange", "update": "[height, 0+100]"},
    {
      "name": "down",
      "value": null,
      "on": [
        {"events": "touchend", "update": "null"},
        {"events": "mousedown, touchstart", "update": "xy()"}
      ]
    },
    {
      "name": "xcur",
      "value": null,
      "on": [
        {"events": "mousedown, touchstart, touchend", "update": "slice(xdom)"}
      ]
    },
    {
      "name": "ycur",
      "value": null,
      "on": [
        {"events": "mousedown, touchstart, touchend", "update": "slice(ydom)"}
      ]
    },
    {
      "name": "delta",
      "value": [0, 0],
      "on": [
        {
          "events": [
            {
              "source": "window",
              "type": "mousemove",
              "consume": true,
              "between": [
                {"type": "mousedown"},
                {"source": "window", "type": "mouseup"}
              ]
            },
            {
              "type": "touchmove",
              "consume": true,
              "filter": "event.touches.length === 1"
            }
          ],
          "update": "down ? [down[0]-x(), y()-down[1]] : [0,0]"
        }
      ]
    },
    {
      "name": "anchor",
      "value": [0, 0],
      "on": [
        {
          "events": "wheel",
          "update": "[invert('xscale', x()), invert('yscale', y())]"
        },
        {
          "events": {
            "type": "touchstart",
            "filter": "event.touches.length===2"
          },
          "update": "[(xdom[0] + xdom[1]) / 2, (ydom[0] + ydom[1]) / 2]"
        }
      ]
    },
    {
      "name": "zoom",
      "value": 1,
      "on": [
        {
          "events": "wheel!",
          "force": true,
          "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
        },
        {
          "events": {"signal": "dist2"},
          "force": true,
          "update": "dist1 / dist2"
        }
      ]
    },
    {
      "name": "dist1",
      "value": 0,
      "on": [
        {
          "events": {
            "type": "touchstart",
            "filter": "event.touches.length===2"
          },
          "update": "pinchDistance(event)"
        },
        {"events": {"signal": "dist2"}, "update": "dist2"}
      ]
    },
    {
      "name": "dist2",
      "value": 0,
      "on": [
        {
          "events": {
            "type": "touchmove",
            "consume": true,
            "filter": "event.touches.length===2"
          },
          "update": "pinchDistance(event)"
        }
      ]
    },
    {
      "name": "xdom",
      "update": "slice(xext)",
      "on": [
        {
          "events": {"signal": "delta"},
          "update": "[xcur[0] + span(xcur) * delta[0] / width, xcur[1] + span(xcur) * delta[0] / width]"
        },
        {
          "events": {"signal": "zoom"},
          "update": "[anchor[0] + (xdom[0] - anchor[0]) * zoom, anchor[0] + (xdom[1] - anchor[0]) * zoom]"
        }
      ]
    },
    {
      "name": "ydom",
      "update": "slice(yext)",
      "on": [
        {
          "events": {"signal": "delta"},
          "update": "[ycur[0] + span(ycur) * delta[1] / height, ycur[1] + span(ycur) * delta[1] / height]"
        },
        {
          "events": {"signal": "zoom"},
          "update": "[anchor[1] + (ydom[0] - anchor[1]) * zoom, anchor[1] + (ydom[1] - anchor[1]) * zoom]"
        }
      ]
    },
    {"name": "size", "update": "clamp(20 / span(xdom), 1, 1000)"}
  ],
  "data": [
    {
      "name": "points",
      "url": "https://raw.githubusercontent.com/chrvt/VEGA_gh/master/projects/polis_to_vega/user_data_vega.csv",
      "format": {"type": "csv", "parse": "auto", "delimiter": ","},
      "transform": [
        {"type": "extent", "field": "x", "signal": "xext"},
        {"type": "extent", "field": "y", "signal": "yext"}
      ]
    },
    {
      "name": "density",
      "source": "points",
      "transform": [
        {
          "type": "kde2d",
          "groupby": ["cluster"],
          "size": [{"signal": "width"}, {"signal": "height"}],
          "x": {"expr": "scale('xscale', datum.x)"},
          "y": {"expr": "scale('yscale', datum.y)"},
          "bandwidth": {"signal": "[bandwidth, bandwidth]"},
          "counts": {"signal": "counts"}
        }
      ]
    },
    {
      "name": "contours",
      "source": "density",
      "transform": [
        {
          "type": "isocontour",
          "field": "grid",
          "resolve": {"signal": "resolve"},
          "levels": 1
        }
      ]
    },
    {
      "name": "user_point",
      "source": "points",
      "format": {"type": "csv", "parse": "auto", "delimiter": ","},
      "transform": [
        {"type": "filter", "expr": "if(1>0,datum.user == User,datum.user)"}
      ]
    },
    {
      "name": "comments",
      "url": "https://raw.githubusercontent.com/chrvt/VEGA_gh/master/projects/polis_to_vega/comments_vega.csv",
      "format": {"type": "csv", "parse": "auto", "delimiter": ","},
      "transform": [
        {"type": "extent", "field": "x", "signal": "xext_"},
        {"type": "extent", "field": "y", "signal": "yext_"}
      ]
    }
  ],
  "scales": [
    {
      "name": "xscale",
      "zero": false,
      "domain": {"signal": "xdom"},
      "range": {"signal": "xrange"}
    },
    {
      "name": "yscale",
      "zero": false,
      "domain": {"signal": "ydom"},
      "range": {"signal": "yrange"}
    },
    {
      "name": "color",
      "type": "ordinal",
      "domain": {"data": "points", "field": "cluster"},
      "range": {"scheme": "category10"}
    }
  ],
  "axes": [
    {"scale": "xscale", "orient": "top", "offset": {"signal": "xoffset"}},
    {"scale": "yscale", "orient": "right", "offset": {"signal": "yoffset"}}
  ],
  "marks": [
    {
      "type": "group",
      "name": "categories",
      "zindex": 1,
      "from": {
        "facet": {"data": "points", "name": "facet", "groupby": ["cluster"]}
      }
    },
    {
      "type": "symbol",
      "from": {"data": "points"},
      "clip": true,
      "encode": {
        "enter": {"fillOpacity": {"value": 0.6}},
        "update": {
          "x": {"scale": "xscale", "field": "x"},
          "y": {"scale": "yscale", "field": "y"},
          "size": {"signal": "size", "mult": 10},
          "fill": {"scale": "color", "field": "cluster"}
        },
        "select": {"size": {"signal": "size", "mult": 10}},
        "release": {"size": {"signal": "size"}}
      }
    },
    {
      "type": "symbol",
      "from": {"data": "comments"},
      "clip": true,
      "encode": {
        "enter": {"fillOpacity": {"value": 0.6}, "fill": {"value": "black"}},
        "update": {
          "x": {"scale": "xscale", "field": "x"},
          "y": {"scale": "yscale", "field": "y"},
          "size": {"signal": "size", "mult": 10}
        },
        "select": {"size": {"signal": "size", "mult": 10}},
        "release": {"size": {"signal": "size"}}
      }
    },
    {
      "type": "symbol",
      "from": {"data": "user_point"},
      "clip": true,
      "encode": {
        "enter": {
          "fillOpacity": {"value": 0.6},
          "fill": {"value": "steelblue"}
        },
        "update": {
          "x": {"scale": "xscale", "field": "x"},
          "y": {"scale": "yscale", "field": "y"},
          "size": {"signal": "size", "mult": 10},
          "shape": {"value": "diamond"},
          "fill": {"value": "firebrick"}
        },
        "select": {"size": {"signal": "size", "mult": 10}}
      }
    },
    {
      "type": "text",
      "interactive": false,
      "encode": {
        "enter": {
          "x": {"signal": "width", "offset": -300},
          "y": {"value": 0},
          "fill": {"value": "steelblue"},
          "fontSize": {"value": 20},
          "align": {"value": "right"}
        },
        "update": {"text": {"signal": "title"}}
      }
    },
    {
      "type": "image",
      "from": {"data": "density"},
      "encode": {
        "update": {
          "x": {"value": 0},
          "y": {"value": 0},
          "width": {"signal": "width"},
          "height": {"signal": "height"},
          "aspect": {"value": false}
        }
      },
      "transform": [
        {
          "type": "heatmap",
          "field": "datum.grid",
          "resolve": {"signal": "resolve"},
          "color": {"expr": "scale('color', datum.datum.cluster)"}
        }
      ]
    },
    {
      "type": "path",
      "clip": true,
      "from": {"data": "contours"},
      "encode": {
        "enter": {
          "strokeWidth": {"value": 1},
          "strokeOpacity": {
            "condition": {"test": "isBoolean(contour)", "value": "0"},
            "value": "1"
          },
          "stroke": {"scale": "color", "field": "cluster"}
        }
      },
      "transform": [{"type": "geopath", "field": "datum.contour"}]
    }
  ]
}